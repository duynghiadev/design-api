// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package main

import (
	"context"
)

const getUsersWithMinPosts = `-- name: GetUsersWithMinPosts :many
SELECT u.name, COUNT(p.id) AS post_count
FROM users AS u
JOIN posts AS p ON u.id = p.user_id
GROUP BY u.id
HAVING COUNT(p.id) >= 2
`

type GetUsersWithMinPostsRow struct {
	Name      string
	PostCount int64
}

func (q *Queries) GetUsersWithMinPosts(ctx context.Context) ([]GetUsersWithMinPostsRow, error) {
	rows, err := q.db.QueryContext(ctx, getUsersWithMinPosts)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetUsersWithMinPostsRow
	for rows.Next() {
		var i GetUsersWithMinPostsRow
		if err := rows.Scan(&i.Name, &i.PostCount); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
